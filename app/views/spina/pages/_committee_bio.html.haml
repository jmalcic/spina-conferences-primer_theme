- cache [committee_bio, committee_bio.structure_parts.collect(&:structure_partable)] do
  .d-flex.flex-column.flex-md-row.flex-items-start
    - cache partable_for(:profile_picture, parent: committee_bio) do
      - if committee_bio.has_content?(:profile_picture) && committee_bio.content(:profile_picture).persisted?
        .flex-shrink-0
          = render Primer::AvatarComponent.new(src: src(committee_bio.content(:profile_picture).file, resize_to_fill: [150, 150]),
                                               srcset: concat_srcset(committee_bio.content(:profile_picture).file,
                                                                     variant: { resize_to_limit: [150, 150] }),
                                               draggable: false, alt: committee_bio.content(:name), size: 150, mr: [nil, nil, 3, nil],
                                               mb: [3, nil, 0, nil])
    .flex-auto
      .d-flex.flex-column.flex-md-row.mb-1
        - cache partable_for(:name, :role, parent: committee_bio) do
          - if committee_bio.has_content?(:name) && committee_bio.has_content?(:role)
            %h3.flex-auto= t :'.name_and_role', name: committee_bio.content(:name), role: committee_bio.content(:role)
          - elsif committee_bio.has_content?(:name)
            %h3.flex-auto= committee_bio.content(:name)
        .BtnGroup.mt-1.mt-md-0.ml-md-1{ aria: { label: t(:'.contact_buttons') } }
          - cache partable_for(:twitter_profile, parent: committee_bio) do
            - if committee_bio.has_content?(:twitter_profile)
              = render Primer::ButtonComponent.new(tag: :a, href: committee_bio.content(:twitter_profile), group_item: true) do
                = render Primer::OcticonComponent.new(icon: 'link-external')
                = t(:'.twitter')
          - cache partable_for(:facebook_profile, parent: committee_bio) do
            - if committee_bio.has_content?(:facebook_profile)
              = render Primer::ButtonComponent.new(tag: :a, href: committee_bio.content(:facebook_profile), group_item: true) do
                = render Primer::OcticonComponent.new(icon: 'link-external')
                = t(:'.facebook')
      - cache partable_for(:bio, parent: committee_bio) do
        - if committee_bio.has_content?(:bio)
          .text-gray-light= committee_bio.content(:bio).try(:html_safe)
