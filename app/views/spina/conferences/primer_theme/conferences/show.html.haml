- if @conference.content(:submission_date).present? && @conference.content(:submission_date) >= Date.today
  - content_for(:flash) { render 'submission_flash' }

- content_for(:header) { render 'header' }

= turbo_frame_tag 'conference_tabs' do
  = render Primer::UnderlineNavComponent.new do |component|
    - component.body(role: 'tablist') do
      = render Primer::LinkComponent.new(href: frontend_conference_url(@conference, tab: 'information',
                                                                                    presentation_type: @presentation_type&.id),
                                         aria: { selected: (@tab == 'information').to_s }, classes: 'UnderlineNav-item', role: 'tab') do
        = t(:'.tabs.information')
      = render Primer::LinkComponent.new(href: frontend_conference_url(@conference, tab: 'presentations',
                                                                                    presentation_type: @presentation_type&.id),
                                         aria: { selected: (@tab == 'presentations').to_s }, classes: 'UnderlineNav-item', role: 'tab') do
        = t(:'.tabs.presentations')
      = render Primer::LinkComponent.new(href: frontend_conference_url(@conference, tab: 'events',
                                                                                    presentation_type: @presentation_type&.id),
                                         aria: { selected: (@tab == 'events').to_s }, classes: 'UnderlineNav-item', role: 'tab') do
        = t(:'.tabs.events')
    - component.actions do
      = render Primer::ButtonComponent.new(tag: :a, href: frontend_conference_url(@conference, protocol: :webcal, format: :ics),
                                           button_type: :primary, variant: :small) do
        = render Primer::OcticonComponent.new(icon: 'calendar')
        = t(:'.subscribe')
  - case @tab
    - when 'information'
      - cache [@conference, @tab] do
        - if @conference.content(:text).present?
          = render(Primer::MarkdownComponent.new(my: 4)) { @conference.content.html(:text) }
        - else
          = render Primer::BlankslateComponent.new(title: t(:'.no_information'), icon: 'info', my: 4)
    - when 'presentations'
      - cache [@conference.presentations, @presentation_type, @presentations, @presentations.collect(&:presenters), @tab] do
        = render partial: 'presentations'
    - when 'events'
      - cache [@conference.events, @tab] do
        = render partial: 'events', locals: { events: @conference.events }
    - else
      = render Primer::BlankslateComponent.new(title: t('.no_tab'), description: t('.tab_does_not_exist', tab: @tab), icon: 'x-circle',
                                               my: 4)
